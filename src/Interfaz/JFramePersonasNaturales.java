/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Conexion.ConexionBD;
import com.mysql.jdbc.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danie
 */
public class JFramePersonasNaturales extends javax.swing.JFrame {

    ConexionBD bD = new ConexionBD();

    /**
     * Creates new form JFramePersonasNaturales
     */
    public JFramePersonasNaturales() {
        initComponents();
        fillDptoCombo();
        fillTablePerson();
        fillDptoActCombo();
    }

    public void fillDptoCombo() {
        Statement s;
        try {
            s = (Statement) bD.conexion().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM departamentos");
            while (rs.next()) {
                dptoCombo.addItem(rs.getString("NOMBRE_DEPARTAMENTO"));
            }
        } catch (SQLException e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    public String getPropietarioDpto() {
        PreparedStatement s;
        try {
            s = bD.conexion().prepareStatement("SELECT COD_CIUDAD FROM propietario WHERE COD_PROPIETARIO = ?");
            Integer cod = null;
            s.setString(1, codAct.getText());
            ResultSet rs = s.executeQuery();
            while (rs.next()) {
                cod = rs.getInt("COD_CIUDAD");
            }
            return getNameDpto(cod);
        } catch (Exception e) {
        }
        return null;
    }

    public String getNameDpto(Integer city) {
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT COD_DEPARTAMENTO FROM ciudades WHERE COD_CIUDAD = ?");
            ps.setInt(1, city);
            Integer cod = null;
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                cod = rs.getInt("COD_DEPARTAMENTO");
            }
            ps = bD.conexion().prepareStatement("SELECT NOMBRE_DEPARTAMENTO FROM departamentos WHERE COD_DEPARTAMENTO = ?");
            ps.setInt(1, cod);
            ResultSet r = ps.executeQuery();
            while (r.next()) {
                return r.getString("NOMBRE_DEPARTAMENTO");
            }
        } catch (Exception e) {

        }
        return null;
    }

    public void fillDptoActCombo() {
        Statement s;
        try {
            s = (Statement) bD.conexion().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM departamentos");
            String nameDptoU = getPropietarioDpto();
            while (rs.next()) {
                dptoAct.addItem(rs.getString("NOMBRE_DEPARTAMENTO"));
                if (rs.getString("NOMBRE_DEPARTAMENTO").equals(nameDptoU)) {
                    dptoAct.setSelectedItem(nameDptoU);
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    //Mirar este metodo para limpiar tablas
    public void fillTablePerson() {
        Statement s;
        try {
            s = (Statement) bD.conexion().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM propietario");
            tablaPersonas.removeAll();
            DefaultTableModel model = (DefaultTableModel) tablaPersonas.getModel();
            tablaPersonas.removeAll();
            Object rowData[] = new Object[6];
            while (rs.next()) {
                rowData[0] = rs.getInt("COD_PROPIETARIO");
                rowData[1] = rs.getString("NOMBRE_PROPIETARIO");
                rowData[2] = rs.getString("APELLIDO_PROPIETARIO");
                rowData[3] = rs.getString("FECHANAC_PROPIETARIO");
                rowData[4] = rs.getString("DIRECCION_PROPIETARIO");
                rowData[5] = getNameCity(rs.getInt("COD_CIUDAD"));
                model.addRow(rowData);
            }
        } catch (Exception e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        codigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        apellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        fechanac = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dptoCombo = new javax.swing.JComboBox<>();
        ciudadCombo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        codAct = new javax.swing.JTextField();
        nomAct = new javax.swing.JTextField();
        apeAct = new javax.swing.JTextField();
        fechaAct = new javax.swing.JTextField();
        direccionAct = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        update = new javax.swing.JButton();
        dptoAct = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        ciuAct = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cod = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        birthdate = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        city = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonas = new javax.swing.JTable();
        borrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Persona (Natural)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(0, 51, 204))); // NOI18N

        jLabel1.setText("Ingrese los datos de la persona:");

        jLabel2.setText("Codigo:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Apellido:");

        jLabel5.setText("Fecha de nacimiento:");

        jLabel6.setText("Direcci√≥n:");

        jLabel7.setText("Departamento:");

        jLabel8.setText("Ciudad:");

        dptoCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dptoComboItemStateChanged(evt);
            }
        });
        dptoCombo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dptoComboPropertyChange(evt);
            }
        });

        ciudadCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Guardar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(54, 54, 54)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(codigo)
                                    .addComponent(nombre)
                                    .addComponent(apellido)
                                    .addComponent(fechanac, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                                    .addComponent(direccion)
                                    .addComponent(dptoCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ciudadCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(fechanac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(dptoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(ciudadCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("Ingresar Persona", jPanel2);

        jLabel17.setText("Ingrese los datos de la persona:");

        jLabel18.setText("Codigo:");

        jLabel19.setText("Nombre:");

        jLabel20.setText("Apellido:");

        jLabel21.setText("Fecha Nacimiento:");

        jLabel22.setText("Direcci√≥n:");

        jLabel23.setText("Departamento:");

        jButton2.setText("Buscar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        update.setText("Actualizar");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });

        dptoAct.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dptoActItemStateChanged(evt);
            }
        });

        jLabel24.setText("Ciudad:");

        ciuAct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(update)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(codAct)
                                    .addComponent(nomAct)
                                    .addComponent(apeAct)
                                    .addComponent(fechaAct)
                                    .addComponent(direccionAct)
                                    .addComponent(dptoAct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ciuAct, 0, 221, Short.MAX_VALUE))))
                        .addGap(68, 68, 68)
                        .addComponent(jButton2)))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel17)
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(codAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(nomAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(apeAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(fechaAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(direccionAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(dptoAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(ciuAct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(update)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("Actualizar Persona", jPanel4);

        jLabel9.setText("Ingrese el codigo de la persona:");

        jLabel10.setText("Codigo:");

        search.setText("Buscar");
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });

        name.setEnabled(false);

        lastname.setEnabled(false);

        birthdate.setEnabled(false);
        birthdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                birthdateActionPerformed(evt);
            }
        });

        address.setEnabled(false);

        city.setEnabled(false);

        jLabel11.setText("Nombre:");

        jLabel12.setText("Apellido:");

        jLabel13.setText("Fecha de nacimiento");

        jLabel14.setText("Direcci√≥n:");

        jLabel15.setText("Codigo Ciudad:");

        jLabel16.setText("Lista:");

        tablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Apellido", "Fecha Nacimiento", "Direccion", "Ciudad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPersonas);

        borrar.setText("Borrar");
        borrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(city, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(address)
                            .addComponent(birthdate)
                            .addComponent(lastname)
                            .addComponent(name)
                            .addComponent(cod)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search)
                    .addComponent(borrar))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(borrar))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buscar Persona", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void borrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrarMouseClicked
        // TODO add your handling code here:
        if (!cod.getText().isEmpty()) {
            PreparedStatement ps;
            try {
                ps = bD.conexion().prepareStatement("DELETE FROM propietario WHERE COD_PROPIETARIO = ?");
                ps.setString(1, cod.getText());
                ps.execute();
                JOptionPane.showMessageDialog(this, "Propietario eliminado", "Info", JOptionPane.INFORMATION_MESSAGE);
                fillTablePerson();
            } catch (Exception e) {
                Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un propietario", "Validacion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_borrarMouseClicked

    private void birthdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_birthdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_birthdateActionPerformed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT * FROM propietario WHERE COD_PROPIETARIO = ?");
            ps.setInt(1, Integer.parseInt(cod.getText()));
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                name.setText(rs.getString("NOMBRE_PROPIETARIO"));
                lastname.setText(rs.getString("APELLIDO_PROPIETARIO"));
                birthdate.setText(rs.getString("FECHANAC_PROPIETARIO"));
                address.setText(rs.getString("DIRECCION_PROPIETARIO"));
                city.setText(getNameCity(rs.getInt("COD_CIUDAD")));
            }
        } catch (Exception e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_searchMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (!nombre.getText().isEmpty() && !codigo.getText().isEmpty() && !apellido.getText().isEmpty() && !direccion.getText().isEmpty()) {
            PreparedStatement ps;
            try {
                java.util.Date d = fechanac.getDate();
                java.sql.Date sqlDate = new java.sql.Date(d.getTime());
                ps = bD.conexion().prepareStatement("INSERT INTO propietario VALUES (?, ?, ?, ?, ?, ?)");
                ps.setString(1, codigo.getText());
                ps.setString(2, nombre.getText());
                ps.setString(3, apellido.getText());
                ps.setDate(4, sqlDate);
                ps.setString(5, direccion.getText());
                ps.setInt(6, getCodeCity((String) ciudadCombo.getSelectedItem()));
                ps.execute();
                JOptionPane.showMessageDialog(this, "Registro exitoso", "Inserccion", JOptionPane.INFORMATION_MESSAGE);
                fillTablePerson();
            } catch (SQLException e) {
                Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void dptoComboPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dptoComboPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dptoComboPropertyChange

    private void dptoComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dptoComboItemStateChanged
        // TODO add your handling code here:
        Integer cod = getCodDpto((String) dptoCombo.getSelectedItem());
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT * FROM ciudades WHERE COD_DEPARTAMENTO = ?");
            ps.setInt(1, cod);
            ResultSet rs = ps.executeQuery();
            ciudadCombo.removeAllItems();
            while (rs.next()) {
                ciudadCombo.addItem(rs.getString("NOMBRE_CIUDAD"));
            }
        } catch (SQLException e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_dptoComboItemStateChanged

    public String getNameCityPropAct(){
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT COD_CIUDAD FROM propietario WHERE COD_PROPIETARIO = ?");
            ps.setString(1, codAct.getText());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {                
                return getNameCity(rs.getInt("COD_CIUDAD"));
            }
        } catch (Exception e) {
        }
        return  null;
    }
    
    private void dptoActItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dptoActItemStateChanged
        // TODO add your handling code here:
        Integer cod = getCodDpto((String) dptoAct.getSelectedItem());
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT * FROM ciudades WHERE COD_DEPARTAMENTO = ?");
            ps.setInt(1, cod);
            ResultSet rs = ps.executeQuery();
            String nombreCiudad = getNameCityPropAct();
            ciuAct.removeAllItems();
            while (rs.next()) {
                ciuAct.addItem(rs.getString("NOMBRE_CIUDAD"));
                if (rs.getString("NOMBRE_CIUDAD").equals(nombreCiudad)) {
                    ciuAct.setSelectedItem(nombreCiudad);
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_dptoActItemStateChanged

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT * FROM propietario WHERE COD_PROPIETARIO = ?");
            ps.setString(1, codAct.getText());
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                nomAct.setText(rs.getString("NOMBRE_PROPIETARIO"));
                apeAct.setText(rs.getString("APELLIDO_PROPIETARIO"));
                direccionAct.setText(rs.getString("DIRECCION_PROPIETARIO"));
                fechaAct.setText(rs.getString("FECHANAC_PROPIETARIO"));
            }
            fillDptoActCombo();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        // TODO add your handling code here:
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("UPDATE propietario SET NOMBRE_PROPIETARIO = ?, APELLIDO_PROPIETARIO = ?, FECHANAC_PROPIETARIO = ?, DIRECCION_PROPIETARIO = ?, COD_CIUDAD = ? WHERE COD_PROPIETARIO = ?");
            ps.setString(1, nomAct.getText());
            ps.setString(2, apeAct.getText());
            ps.setString(3, fechaAct.getText());
            ps.setString(4, direccionAct.getText());
            ps.setInt(5, getCodeCity((String) ciuAct.getSelectedItem()));
            ps.setString(6, codAct.getText());
            ps.execute();
            JOptionPane.showMessageDialog(this, "Actualizacion exitosa", "Info", JOptionPane.INFORMATION_MESSAGE);
            fillTablePerson();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error ..." + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_updateMouseClicked

    public Integer getCodeCity(String nombre) {
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT COD_CIUDAD FROM ciudades WHERE NOMBRE_CIUDAD = ?");
            ps.setString(1, nombre);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                return rs.getInt("COD_CIUDAD");
            }
        } catch (SQLException e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
        return null;
    }

    public String getNameCity(Integer city) {
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareCall("SELECT NOMBRE_CIUDAD FROM ciudades WHERE COD_CIUDAD = ?");
            ps.setInt(1, city);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                return rs.getString("NOMBRE_CIUDAD");
            }
        } catch (Exception e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
        return null;
    }

    public Integer getCodDpto(String nombre) {
        PreparedStatement ps;
        try {
            ps = bD.conexion().prepareStatement("SELECT COD_DEPARTAMENTO FROM departamentos WHERE NOMBRE_DEPARTAMENTO = ?");
            ps.setString(1, nombre);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                return rs.getInt("COD_DEPARTAMENTO");
            }
        } catch (SQLException e) {
            Logger.getLogger(JFramePersonasNaturales.class.getName()).log(Level.SEVERE, null, e);
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePersonasNaturales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePersonasNaturales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePersonasNaturales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePersonasNaturales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePersonasNaturales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JTextField apeAct;
    private javax.swing.JTextField apellido;
    private javax.swing.JTextField birthdate;
    private javax.swing.JButton borrar;
    private javax.swing.JTextField city;
    private javax.swing.JComboBox<String> ciuAct;
    private javax.swing.JComboBox<String> ciudadCombo;
    private javax.swing.JTextField cod;
    private javax.swing.JTextField codAct;
    private javax.swing.JTextField codigo;
    private javax.swing.JTextField direccion;
    private javax.swing.JTextField direccionAct;
    private javax.swing.JComboBox<String> dptoAct;
    private javax.swing.JComboBox<String> dptoCombo;
    private javax.swing.JTextField fechaAct;
    private com.toedter.calendar.JDateChooser fechanac;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastname;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nomAct;
    private javax.swing.JTextField nombre;
    private javax.swing.JButton search;
    private javax.swing.JTable tablaPersonas;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
